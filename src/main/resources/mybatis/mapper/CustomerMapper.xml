<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-/mabatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
        
<mapper namespace="com.exe.cozy.mapper.CustomerMapper">
	<!-- 이메일 중복확인 -->
	<select id="emailChk" resultType="int" parameterType="String">
		select count(*) from customer where customerEmail=#{customerEmail}
	</select>
	
	<!-- 데이터 한개 입력 -->
	<insert id="insertData" parameterType="CustomerDto">
		insert into customer (customerEmail,customerPwd,customerName,
		customerTel,customerDate,customerGrade,customerType,customerPoint)
		values (#{customerEmail},#{customerPwd},#{customerName},#{customerTel},
		sysdate,'FAMILY',0,3000)
	</insert>
	
	<!-- 로그인 확인 -->
	<select id="getLogin" parameterType="String" resultType="CustomerDto">
		select customerEmail,customerPwd
		from customer
		where customerEmail=#{customerEmail}
	</select>
	
	<!-- 비밀번호 찾기 -->
	<select id="forgot" parameterType="String" resultType="CustomerDto">
		select customerEmail,customerTel
		from customer
		where customerEmail=#{customerEmail}
	</select>
	
	<!-- 임시비밀번호 발급 -->
	<update id="updatePwd" parameterType="CustomerDto">
		update customer set customerPwd=#{customerPwd}
		where customerEmail=#{customerEmail}
	</update>
	
	<!-- 데이터 한개 읽기 -->
	<select id="getReadData" parameterType="String" resultType="CustomerDto">
		select customerEmail,customerPwd,customerName,customerTel,customerZipCode,
		customerRAddr,customerJAddr,customerDAddr,
		(select fs.UUID_FILE_NAME||'.'||fs.FILE_EXTENSION
			from file_store fs
			where fs.no = customer.customerProfile
		) as customerProfile,
		customerGrade,customerPoint
		from customer where customerEmail=#{customerEmail}
	</select>
	
	<!-- 데이터 수정 -->
	<update id="updateData" parameterType="CustomerDto">
		update customer set customerPwd=#{customerPwd},customerTel=#{customerTel},
		customerZipCode=#{customerZipCode},customerRAddr=#{customerRAddr},
		customerJAddr=#{customerJAddr},customerDAddr=#{customerDAddr}
		where customerEmail=#{customerEmail}
	</update>
	
	<!-- 프로필 수정 -->
	<update id="updateProfile" parameterType="CustomerDto">
		update customer set customerProfile=#{customerProfile}
		where customerEmail=#{customerEmail}
	</update>
	
	<!-- 포인트 수정 -->
	<update id="updatePoint" parameterType="CustomerDto">
		update customer set customerPoint=#{customerPoint}
		where customerEmail=#{customerEmail}
	</update>
	
	<!-- 데이터 삭제 -->
	<delete id="deleteData" parameterType="String">
		delete customer where customerEmail=#{customerEmail}
	</delete>
	
	<!-- 마이페이지 리뷰조회 -->
	<resultMap type="ReplyDto" id="ReplyDto">
		<result column="replyId" property="replyId"/>
		<result column="itemNum" property="itemNum"/>
		<result column="customerEmail" property="customerEmail"/>
		<result column="regDate" property="regDate"/>
		<result column="content" property="content"/>
		<result column="rating" property="rating"/>
		<collection property="item" resultMap="ItemDetailDto"></collection>
	</resultMap>
	
	<resultMap type="ItemDetailDto" id="ItemDetailDto">
		<result column="itemName" property="itemName"/>
		<result column="itemMainType" property="itemMainType"/>
		<result column="itemSubType" property="itemSubType"/>
		<result column="itemImage1" property="itemImage1"/>
		<result column="itemPrice" property="itemPrice"/>
		<result column="itemDiscount" property="itemDiscount"/>
		<result column="itemNum" property="itemNum"/>
		<result column="itemColor" property="itemColor"/>
		<result column="itemSize" property="itemSize"/>
		<result column="itemStock" property="itemStock"/>
	</resultMap>
	
	<select id="getReviewPaging" parameterType="ReplyDto" resultMap="ReplyDto">
		select 
			a.replyId
			,a.itemNum
			,a.customerEmail
			,a.regDate
			,a.content
			,a.rating
			,b.itemName
			,b.itemMainType
			,b.itemSubType
			,b.itemImage1
		from 
			reply a left join item b
		on
			a.itemNum=b.itemNum
		where
			a.customerEmail=#{customerEmail}
		order by
			a.replyId desc
	</select>
	
	<!-- 마이페이지 주문조회 리스트 -->
	<select id="getOrderList" resultType="OrderDto" parameterType="String">
		select * from COZYORDER
		where customerEmail=#{customerEmail}
		and not orderState='주문취소'
		order by orderDate desc
	</select>
	
	<!-- 마이페이지 주문취소조회 리스트 -->
	<select id="getOrderCancleList" resultType="OrderDto" parameterType="String">
		select * from COZYORDER
		where customerEmail=#{customerEmail}
		and orderState='주문취소'
		order by orderDate desc
	</select>
	
	<select id="getOrderDetail" resultType="OrderDto">
		select * from CozyOrder
		where customerEmail=#{customerEmail} and orderNum=#{orderNum}
	</select>
	 
	<!-- 마이페이지 주문조회 상세리스트 -->
	<resultMap type="OrderDto" id="OrderDto">
		<result column="orderNum" property="orderNum"/>
		<result column="orderState" property="orderState"/>
		<result column="deliverCost" property="deliverCost"/>
		<result column="deliverName" property="deliverName"/>
		<result column="deliverRAddr" property="deliverRAddr"/>
		<result column="deliverJAddr" property="deliverJAddr"/>
		<result column="deliverDAddr" property="deliverDAddr"/>
		<result column="deliverZipCode" property="deliverZipCode"/>
		<result column="deliverTel" property="deliverTel"/>
		<result column="deliverMessage" property="deliverMessage"/>
		<result column="usePoint" property="usePoint"/>
		<result column="orderDate" property="orderDate"/>
	</resultMap>
	
	<resultMap type="OrderDetailDto" id="OrderDetailDto">
		<result column="odNum" property="odNum"/>
		<result column="itemQty" property="itemQty"/>
		<result column="itemColor" property="itemColor"/>
		<result column="itemSize" property="itemSize"/>
		<collection property="orderDto" resultMap="OrderDto"></collection>
		<collection property="itemDto" resultMap="ItemDetailDto"></collection>
	</resultMap>
	
	<select id="getOrderDetailList" parameterType="OrderDetailDto" resultMap="OrderDetailDto">
		SELECT
			a.odNum,
			a.itemQty,
			a.itemColor,
			a.itemSize,
			b.orderNum,
			b.orderState,
			b.deliverCost,
			b.deliverName,
			b.deliverRAddr,
			b.deliverJAddr,
			b.deliverDAddr,
			b.deliverZipCode,
			b.deliverTel,
			b.deliverMessage,
			b.orderDate,
			b.usePoint,
			c.itemName,
			c.itemPrice,
			c.itemDiscount,
			c.itemNum,
			(select fs.UUID_FILE_NAME||'.'||fs.FILE_EXTENSION
			           from file_store fs
			          where fs.no = c.itemImage1
			        ) as itemImage1
		from orderDetail a join COZYORDER b
		on a.orderNum=b.orderNum
		join item c
		on a.itemNum=c.itemNum
		where customerEmail=#{customerEmail} and not orderState='주문취소'
		order by a.odNum desc
	</select>
	 
	 <select id="getOrderDetailOne" parameterType="OrderDetailDto" resultMap="OrderDetailDto">
		SELECT
			a.odNum,
			a.itemQty,
			a.itemColor,
			a.itemSize,
			b.orderNum,
			b.orderState,
			b.deliverCost,
			b.deliverName,
			b.deliverRAddr,
			b.deliverJAddr,
			b.deliverDAddr,
			b.deliverZipCode,
			b.deliverTel,
			b.deliverMessage,
			b.orderDate,
			b.usePoint,
			c.itemName,
			c.itemPrice,
			c.itemDiscount,
			c.itemNum,
			c.itemStock,
			(select fs.UUID_FILE_NAME||'.'||fs.FILE_EXTENSION
			           from file_store fs
			          where fs.no = c.itemImage1
			        ) as itemImage1
		from orderDetail a join COZYORDER b
		on a.orderNum=b.orderNum
		join item c
		on a.itemNum=c.itemNum
		where customerEmail=#{customerEmail} and b.orderNum=#{orderNum}
		order by a.odNum desc
	</select>
	
	<!-- 마이페이지 주문취소조회 상세리스트 --> 
	<select id="getOrderCancleDetailList" parameterType="OrderDetailDto" resultMap="OrderDetailDto">
		SELECT
			a.odNum,
			a.itemQty,
			a.itemColor,
			a.itemSize,
			b.orderNum,
			b.orderState,
			b.deliverCost,
			b.deliverName,
			b.deliverRAddr,
			b.deliverJAddr,
			b.deliverDAddr,
			b.deliverZipCode,
			b.deliverTel,
			b.deliverMessage,
			b.orderDate,
			b.usePoint,
			c.itemName,
			c.itemPrice,
			c.itemDiscount,
			c.itemNum,
			(select fs.UUID_FILE_NAME||'.'||fs.FILE_EXTENSION
			           from file_store fs
			          where fs.no = c.itemImage1
			        ) as itemImage1
		from orderDetail a join COZYORDER b
		on a.orderNum=b.orderNum
		join item c
		on a.itemNum=c.itemNum
		where customerEmail=#{customerEmail} and orderState='주문취소'
		order by b.orderDate desc
	</select>
	 
	 <!-- 마이페이지 문의내역 리스트 -->
	 <resultMap type="ServiceQuestionDto" id="ServiceQuestionDto">
		<result column="serviceQueNum" property="serviceQueNum"/>
		<result column="serviceQueTitle" property="serviceQueTitle"/>
		<result column="serviceQueDate" property="serviceQueDate"/>
		<collection property="serviceAnswer" resultMap="ServiceAnswerDto"></collection>
	</resultMap>
	
	<resultMap type="ServiceAnswerDto" id="ServiceAnswerDto">
		<result column="serviceAnsContent" property="serviceAnsContent"/>
		<result column="serviceAnsDate" property="serviceAnsDate"/>
		<result column="serviceAnsNum" property="serviceAnsNum"/>
	</resultMap>
	 
 	 <select id="getQnaList" parameterType="ServiceQuestionDto" resultMap="ServiceQuestionDto">
	 	select
	 		a.serviceQueNum,
	 		a.serviceQueTitle,
	 		a.serviceQueDate,
	 		a.serviceQueContent,
	 		b.serviceAnsContent,
	 		b.serviceAnsDate,
	 		b.serviceAnsNum
	 	from
	 		serviceQuestion a left join serviceAnswer b
	 	on
	 		a.serviceQueNum=b.serviceQueNum
	 	where
	 		customerEmail=#{customerEmail}
	 	<if test="searchKey == 'serviceQueTitle'">
            AND serviceQueTitle LIKE '%'||#{searchValue}||'%'
        </if>
        <if test="searchKey == 'serviceQueContent'">
            AND serviceQueContent LIKE '%'||#{searchValue}||'%'
        </if>
	 	order by
	 		serviceQueNum desc
	 </select>
	 
	 <select id="getReadAnsData" resultType="ServiceAnswerDto">
	 	select * from ServiceAnswer where serviceQueNum=#{serviceQueNum}
	 </select>
 
</mapper>
